1. 准备开发环境，使用 Docker 启动 mysql，将 sql 语句导入数据库：
docker run -it -e MYSQL_ROOT_PASSWORD=Aa@6447985 -p 3306:3306 --name ginvue mysql:5.7
docker start -i ginvue # 第二次启动

2. 第一阶段改造步骤：（已完成）
    2.1 引入 go-spring web 组件，关闭 swagger 及默认 filter；(已完成)
    2.2 启动一个新的 web 容器，使用 application.properties；（已完成）
    2.3 增加一个重定向中间件，对于可迁移的接口使用重定向机制进行迁移；（已完成）
    2.4 给 go-spring 也配置跨域组件；（已完成）
    2.5 迁移接口到 go-spring，老接口先保留。（已完成）
    2.6 每迁移一个接口测试一下，推荐每次只保留一个迁移接口测试；（已完成）
    2.7 所有接口迁移完之后，打开所有迁移接口测试一次；（已完成）
    2.8 去掉原有的 web 服务，将 go-spring 的端口改成 8888；（已完成）
    2.9 大功告成！（已完成）

3. 第二阶段改造步骤：
    3.1 将所有的模块接口改造成 struct 的成员函数，示例见 api/v1/sys_user.go。（已完成）
    3.2 大功告成！（已完成）

4. 第三阶段改造步骤：
    4.1 将所有模块接口改造成 SpringWeb.HandlerFunc 的形式，示例参见 api/v1/sys_user.go。（已完成）
    4.2 大功告成！（已完成）

5. 第四阶段改造步骤：
    5.1 改造 global/response/response.go 接口的输入参数为 SpringWeb.WebContext。
    5.2 改造 c.ShouldBindJSON 函数为 SpringWeb.WebContext.Bind 函数。
    5.3 查漏补缺，v1 包里面清除对 gin.Context 的依赖。
    5.4 大功告成！